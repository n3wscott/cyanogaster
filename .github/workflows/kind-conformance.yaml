name: KinD conformance tests

on:
  push:
    branches: [ 'main', 'release-*' ]
  pull_request:
    branches: [ 'main', 'release-*' ]

  workflow_dispatch:      # Manual trigger.
    inputs:
      milestoneEventsTarget:
        required: false
        description: 'Target Milestone Events to URL'

jobs:

  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
          - v1.21.x
          - v1.22.x
          - v1.23.x

    env:
      KO_DOCKER_REPO: registry.local:5000/cyanogaster

    steps:
    - name: Defaults
      run: |
        if [[ "${{ github.event.inputs.milestoneEventsTarget }}" != "" ]]; then
        echo "MILESTONE_EVENTS_TARGET=${{ github.event.inputs.milestoneEventsTarget }}" >> $GITHUB_ENV
        fi

    - uses: actions/checkout@v3

    - uses: chainguard-dev/actions/setup-mirror@main

    # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
    - uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ${{ env.KOCACHE }}
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - uses: actions/setup-go@v3
      with:
        go-version: '1.17'
        check-latest: true

    - name: Set up `crane`
      run: go install github.com/google/go-containerregistry/cmd/crane@v0.8.0

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x

    - uses: imjasonh/setup-ko@v0.4
      with:
        version: v0.10.0

    - name: Setup Cluster
      uses: chainguard-dev/actions/setup-kind@main
      with:
        k8s-version: ${{ matrix.k8s-version }}
        registry-authority: registry.local:5000

    - name: Setup Knative
      # TODO: upstream setup-knative changes back to chainguard-dev/actions.
      uses: ./.github/actions/setup-knative
      with:
        version: '1.3.0'
        serving-features: '{"kubernetes.podspec-fieldref":"enabled", "kubernetes.podspec-volumes-emptydir":"enabled", "kubernetes.podspec-init-containers": "enabled", "kubernetes.podspec-securitycontext":"enabled"}'
        serving-defaults: '{"revision-timeout-seconds":"30","container-concurrency":"100"}'
        serving-autoscaler: '{"min-scale":"1","max-scale":"1"}'

    - name: Install Cyanogaster
      timeout-minutes: 10
      run: |
        ko apply -BRf ./config

    - name: Run conformance tests & install all required deps
      env:
        BROKER_CLASS: GlassBroker
        SYSTEM_NAMESPACE: knative-eventing
      run: |
        go test -v -tags=e2e \
            -count=1 -parallel=8 -timeout=1h \
            -run TestBroker.*Conformance.* ./test/conformance/...

    - name: Collect diagnostics and upload
      if: ${{ failure() }}
      uses: chainguard-dev/actions/kind-diag@main
